function wp = wp_init(traj)

base_gate = [ 0.00  0.00  0.00  0.00  0.00;...
             -0.30 -0.30  0.30  0.30 -0.30;...
             -0.15  0.15  0.15 -0.15 -0.15];
         
base_pole = [ 0.00  0.00  0.00  0.00  0.00;...
             -0.03 -0.03  0.03  0.03 -0.03;...
              0.00  0.20  0.20  0.00  0.00];
map = [0 0 0]';

x = zeros(13,1);

switch traj
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    case 'hover'
        tf = 2.0;
        
        x(:,1) = [0 ; 0 ; 1 ; zeros(3,1) ; 1 ; zeros(6,1)];
        x(:,2) = [0 ; 0 ; 1 ; zeros(3,1) ; 1 ; zeros(6,1)];

        Q_key = [6 6];
        R_key = [1 1];
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    case 'climb'
        tf = 2.0;
        
        x(:,1) = [0 ; 0 ; 0 ; zeros(3,1) ; 1 ; zeros(6,1)];
        x(:,2) = [0 ; 0 ; 1 ; zeros(3,1) ; 1 ; zeros(6,1)];
                
        Q_key = [6 7];
        R_key = [1 1];             
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    case 'line'
        tf = 5.0;

        x(:,1) = [-4 ; 0 ; 1; zeros(3,1) ; 1 ; zeros(6,1)];
        x(:,2) = [4 ; 0 ; 1; zeros(3,1) ; 1 ; zeros(6,1)];

        Q_key = [6 7];
        R_key = [1 1];                                 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    case 'half-square'
        tf = 4.0;

        x(:,1) = [0 ; 0 ; 0; zeros(3,1) ; 1 ; zeros(6,1)];
        x(:,2) = [0 ; 0 ; 1; zeros(3,1) ; 1 ; zeros(6,1)];
        x(:,3) = [0 ; 2 ; 1; zeros(3,1) ; 1 ; zeros(6,1)];
        x(:,4) = [2 ; 2 ; 1; zeros(3,1) ; 1 ; zeros(6,1)];
                
        Q_key = [6 6;...
                 6 6;...
                 6 6];
        R_key = [1 1;...
                 1 1;...
                 1 1];             

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    case 'square'      
        tf = 7.0;

        x(:,1) = [ 0 ; 0 ; 0; zeros(3,1) ; 1 ; zeros(6,1)];
        x(:,2) = [ 0 ; 0 ; 1; zeros(3,1) ; 1 ; zeros(6,1)];
        x(:,3) = [ 0 ; 2 ; 1; zeros(3,1) ; 1 ; zeros(6,1)];
        x(:,4) = [ 2 ; 2 ; 1; zeros(3,1) ; 1 ; zeros(6,1)];
        x(:,5) = [ 2 ; 0 ; 1; zeros(3,1) ; 1 ; zeros(6,1)];
        x(:,6) = [ 0 ; 0 ; 1; zeros(3,1) ; 1 ; zeros(6,1)];
        x(:,7) = [ 0 ; 0 ; 0; zeros(3,1) ; 1 ; zeros(6,1)];

        Q_key = [6 6;...
                 6 6;...
                 6 6;...
                 6 6;...
                 6 6;...
                 6 6];
        R_key = [1 1;...
                 1 1;...
                 1 1;...
                 1 1;...
                 1 1;...
                 1 1];
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    case 'flip'  
        tf = 2.0;
        
        x(:,1) = [ 0.0 ; 0.0 ; 1.0 ; 0.0 ; 0.0 ; 0.0 ; 1.0 ; 0.0 ; 0.0 ; 0.0 ; zeros(3,1)];
        x(:,2) = [ 0.0 ; 0.0 ; 2.0 ; 0.0 ; 0.0 ; 0.0 ; 0.0 ; 1.0 ; 0.0 ; 0.0 ; 10 ; 0 ; 0];
        x(:,3) = [ 0.0 ; 0.0 ; 1.0 ; 0.0 ; 0.0 ; 0.0 ; 1.0 ; 0.0 ; 0.0 ; 0.0 ; zeros(3,1)];

        Q_key = [1 3;...
                 3 7];...
        R_key = [1 1;...
                 1 1];      
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    case 'slit'
        tf = 5.0;
        
        raw_angles = [-pi/4 0 0];
        quat = eul2quat(raw_angles)';
        bRw = quat2rotm(quat');
        map = bRw*base_gate + [0 0 1]';

        x(:,1) = [-1.0 ; 0.0 ; 1.0 ; zeros(3,1) ; 1.0 ; zeros(6,1)];
        x(:,2) = [ 0.0 ; 0.0 ; 1.0 ; 1.0 ; 0.0  ; 0.0 ; quat ; zeros(3,1)];    % Tilt (through the hole)
        x(:,3) = [ 1.0 ; 0.0 ; 1.0 ; zeros(3,1) ; 1.0 ; zeros(6,1)];
              
        Q_key = [4 6;...
                 1 6];
        R_key = [1 1;...
                 1 1];               
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%        
    case 'dive'        
        tf = 5.0;
        
        raw_angles = [0 -pi/4 0];
        quat = eul2quat(raw_angles)';
        map = base_pole + [0 0 0]';
        
        x(:,1) = [-2.0 ; 0.0 ; 1.0 ; 0.0 ; 0.0 ; 0.0 ; 1.0  ; 0.0 ;  0.0 ; 0.0 ; zeros(3,1)];
        x(:,2) = [ 0.0 ; 0.0 ; 0.2 ; 2.0 ; 0.0 ; 0.0 ; quat ; zeros(3,1)];
        x(:,3) = [ 2.0 ; 0.0 ; 1.0 ; 0.0 ; 0.0 ; 0.0 ; 1.0  ; 0.0 ;  0.0 ; 0.0 ; zeros(3,1)];
        
        Q_key = [6 7;...
                 6 7];
        R_key = [1 1;...
                 1 1];       
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%        
    case 'dive vII'        
        tf = 5.0;
        
        raw_angles = [0 -pi/2 0];
        quat = eul2quat(raw_angles)';
        map = base_pole + [0 0 0]';
        
        x(:,1) = [-2.0 ; 0.0 ; 1.0 ; 0.0 ; 0.0 ; 0.0 ; 1.0  ; 0.0 ;  0.0 ; 0.0 ; zeros(3,1)];
        x(:,2) = [ 0.0 ; 0.0 ; 0.2 ; 2.0 ; 0.0 ; 0.0 ; quat ; zeros(3,1)];
        x(:,3) = [ 2.0 ; 0.0 ; 1.0 ; 0.0 ; 0.0 ; 0.0 ; 1.0  ; 0.0 ;  0.0 ; 0.0 ; zeros(3,1)];
       
        Q_key = [1 3;...
                 3 7];
        R_key = [1 1;...
                 1 1]; 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%        
    case 'calicadabra'   
        tf = 10.0;
        
        raw_angles = [pi/8 0 0];

        left = eul2quat(-raw_angles)';
        right = eul2quat(raw_angles)';
        map = base_pole + [0 0 0]';
        
        x(:,1)   = [ 0.0 ; 0.0 ; 1.0 ; 0.0 ; 0.0 ; 0.0 ; 1.0  ; 0.0 ;  0.0 ; 0.0 ; zeros(3,1)];
        x(:,2)   = [ 0.0 ; 0.0 ; 0.95; 0.0 ; 0.0 ; 0.0 ; left ; zeros(3,1)];
        x(:,3)   = [ 0.0 ; 0.0 ; 1.0 ; 0.0 ; 0.0 ; 0.0 ; 1.0  ; 0.0 ;  0.0 ; 0.0 ; zeros(3,1)];
        x(:,4)   = [ 0.0 ; 0.0 ; 0.95; 0.0 ; 0.0 ; 0.0 ; right; zeros(3,1)];
        x(:,5)   = [ 0.0 ; 0.0 ; 1.0 ; 0.0 ; 0.0 ; 0.0 ; 1.0  ; 0.0 ;  0.0 ; 0.0 ; zeros(3,1)];
        x(:,6)   = [ 0.0 ; 0.0 ; 0.95; 0.0 ; 0.0 ; 0.0 ; left ; zeros(3,1)];
        x(:,7)   = [ 0.0 ; 0.0 ; 1.0 ; 0.0 ; 0.0 ; 0.0 ; 1.0  ; 0.0 ;  0.0 ; 0.0 ; zeros(3,1)];
        x(:,8)   = [ 0.0 ; 0.0 ; 0.95; 0.0 ; 0.0 ; 0.0 ; right; zeros(3,1)];
        x(:,9)   = [ 0.0 ; 0.0 ; 1.0 ; 0.0 ; 0.0 ; 0.0 ; 1.0  ; 0.0 ;  0.0 ; 0.0 ; zeros(3,1)];
        
        Q_key = [6.*ones(8,1) 7.*ones(8,1)];
        R_key = ones(8,2);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%        
    case 'horizon'
        tf = 3.0;
        
        map = base_pole + [0 0 0]';

        x(:,1) = [ 0.0 ; 0.0 ; 0.0 ; 0.0 ; 0.0 ; 0.0 ; 1.0 ; 0.0 ; 0.0 ; 0.0 ; zeros(3,1)];
        x(:,2) = [ 0.0 ; 0.0 ; 0.0 ; 0.0 ; 0.0 ; 0.0 ; 1.0 ; 0.0 ; 0.0 ; 0.0 ; zeros(3,1)];
        
        Q_key = [1 2];
        R_key = [1 1];        
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%        
    otherwise
        disp('[wp_init]: No trajectory loaded!');
end

wp.gate = base_gate;
wp.t = linspace(0,tf,size(x,2));
wp.x = x;
wp.N_wp = size(x,2);
wp.tf = tf;

wp.x_lim = [-8.1 8.1];
wp.y_lim = [-3.2 3.2];
wp.z_lim = [0 3];

wp.Q_key = Q_key;
wp.R_key = R_key;
wp.map = map;

end
